/* tslint:disable */
/* eslint-disable */
/**
 * Plane API
 * API documentation for my specific app
 *
 * The version of the OpenAPI document: 1.0.0 (1.0.0)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PatchedIssueLink
 */
export interface PatchedIssueLink {
    /**
     * 
     * @type {Date}
     * @memberof PatchedIssueLink
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof PatchedIssueLink
     */
    readonly createdBy?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof PatchedIssueLink
     */
    deletedAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof PatchedIssueLink
     */
    readonly id?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedIssueLink
     */
    readonly issue?: string;
    /**
     * 
     * @type {any}
     * @memberof PatchedIssueLink
     */
    metadata?: any | null;
    /**
     * 
     * @type {string}
     * @memberof PatchedIssueLink
     */
    readonly project?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedIssueLink
     */
    title?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof PatchedIssueLink
     */
    readonly updatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof PatchedIssueLink
     */
    readonly updatedBy?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PatchedIssueLink
     */
    url?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedIssueLink
     */
    readonly workspace?: string;
}

/**
 * Check if a given object implements the PatchedIssueLink interface.
 */
export function instanceOfPatchedIssueLink(value: object): value is PatchedIssueLink {
    return true;
}

export function PatchedIssueLinkFromJSON(json: any): PatchedIssueLink {
    return PatchedIssueLinkFromJSONTyped(json, false);
}

export function PatchedIssueLinkFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedIssueLink {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'createdBy': json['created_by'] == null ? undefined : json['created_by'],
        'deletedAt': json['deleted_at'] == null ? undefined : (new Date(json['deleted_at'])),
        'id': json['id'] == null ? undefined : json['id'],
        'issue': json['issue'] == null ? undefined : json['issue'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'project': json['project'] == null ? undefined : json['project'],
        'title': json['title'] == null ? undefined : json['title'],
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'updatedBy': json['updated_by'] == null ? undefined : json['updated_by'],
        'url': json['url'] == null ? undefined : json['url'],
        'workspace': json['workspace'] == null ? undefined : json['workspace'],
    };
}

export function PatchedIssueLinkToJSON(json: any): PatchedIssueLink {
    return PatchedIssueLinkToJSONTyped(json, false);
}

export function PatchedIssueLinkToJSONTyped(value?: Omit<PatchedIssueLink, 'created_at'|'created_by'|'id'|'issue'|'project'|'updated_at'|'updated_by'|'workspace'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'deleted_at': value['deletedAt'] == null ? undefined : ((value['deletedAt'] as any).toISOString()),
        'metadata': value['metadata'],
        'title': value['title'],
        'url': value['url'],
    };
}

