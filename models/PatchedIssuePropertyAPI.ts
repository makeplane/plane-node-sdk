/* tslint:disable */
/* eslint-disable */
/**
 * Plane API
 * API documentation for my specific app
 *
 * The version of the OpenAPI document: 1.0.0 (1.0.0)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IssuePropertyAPIRelationType } from './IssuePropertyAPIRelationType';
import {
    IssuePropertyAPIRelationTypeFromJSON,
    IssuePropertyAPIRelationTypeFromJSONTyped,
    IssuePropertyAPIRelationTypeToJSON,
    IssuePropertyAPIRelationTypeToJSONTyped,
} from './IssuePropertyAPIRelationType';
import type { PropertyTypeEnum } from './PropertyTypeEnum';
import {
    PropertyTypeEnumFromJSON,
    PropertyTypeEnumFromJSONTyped,
    PropertyTypeEnumToJSON,
    PropertyTypeEnumToJSONTyped,
} from './PropertyTypeEnum';

/**
 * 
 * @export
 * @interface PatchedIssuePropertyAPI
 */
export interface PatchedIssuePropertyAPI {
    /**
     * 
     * @type {Date}
     * @memberof PatchedIssuePropertyAPI
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof PatchedIssuePropertyAPI
     */
    readonly createdBy?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof PatchedIssuePropertyAPI
     */
    defaultValue?: Array<string>;
    /**
     * 
     * @type {Date}
     * @memberof PatchedIssuePropertyAPI
     */
    readonly deletedAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof PatchedIssuePropertyAPI
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PatchedIssuePropertyAPI
     */
    displayName?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedIssuePropertyAPI
     */
    externalId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PatchedIssuePropertyAPI
     */
    externalSource?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PatchedIssuePropertyAPI
     */
    readonly id?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PatchedIssuePropertyAPI
     */
    isActive?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PatchedIssuePropertyAPI
     */
    isMulti?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PatchedIssuePropertyAPI
     */
    isRequired?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PatchedIssuePropertyAPI
     */
    readonly issueType?: string;
    /**
     * 
     * @type {any}
     * @memberof PatchedIssuePropertyAPI
     */
    readonly logoProps?: any | null;
    /**
     * 
     * @type {string}
     * @memberof PatchedIssuePropertyAPI
     */
    readonly name?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedIssuePropertyAPI
     */
    readonly project?: string | null;
    /**
     * 
     * @type {PropertyTypeEnum}
     * @memberof PatchedIssuePropertyAPI
     */
    propertyType?: PropertyTypeEnum;
    /**
     * 
     * @type {IssuePropertyAPIRelationType}
     * @memberof PatchedIssuePropertyAPI
     */
    relationType?: IssuePropertyAPIRelationType | null;
    /**
     * 
     * @type {any}
     * @memberof PatchedIssuePropertyAPI
     */
    readonly settings?: any | null;
    /**
     * 
     * @type {number}
     * @memberof PatchedIssuePropertyAPI
     */
    readonly sortOrder?: number;
    /**
     * 
     * @type {Date}
     * @memberof PatchedIssuePropertyAPI
     */
    readonly updatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof PatchedIssuePropertyAPI
     */
    readonly updatedBy?: string | null;
    /**
     * 
     * @type {any}
     * @memberof PatchedIssuePropertyAPI
     */
    validationRules?: any | null;
    /**
     * 
     * @type {string}
     * @memberof PatchedIssuePropertyAPI
     */
    readonly workspace?: string;
}



/**
 * Check if a given object implements the PatchedIssuePropertyAPI interface.
 */
export function instanceOfPatchedIssuePropertyAPI(value: object): value is PatchedIssuePropertyAPI {
    return true;
}

export function PatchedIssuePropertyAPIFromJSON(json: any): PatchedIssuePropertyAPI {
    return PatchedIssuePropertyAPIFromJSONTyped(json, false);
}

export function PatchedIssuePropertyAPIFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedIssuePropertyAPI {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'createdBy': json['created_by'] == null ? undefined : json['created_by'],
        'defaultValue': json['default_value'] == null ? undefined : json['default_value'],
        'deletedAt': json['deleted_at'] == null ? undefined : (new Date(json['deleted_at'])),
        'description': json['description'] == null ? undefined : json['description'],
        'displayName': json['display_name'] == null ? undefined : json['display_name'],
        'externalId': json['external_id'] == null ? undefined : json['external_id'],
        'externalSource': json['external_source'] == null ? undefined : json['external_source'],
        'id': json['id'] == null ? undefined : json['id'],
        'isActive': json['is_active'] == null ? undefined : json['is_active'],
        'isMulti': json['is_multi'] == null ? undefined : json['is_multi'],
        'isRequired': json['is_required'] == null ? undefined : json['is_required'],
        'issueType': json['issue_type'] == null ? undefined : json['issue_type'],
        'logoProps': json['logo_props'] == null ? undefined : json['logo_props'],
        'name': json['name'] == null ? undefined : json['name'],
        'project': json['project'] == null ? undefined : json['project'],
        'propertyType': json['property_type'] == null ? undefined : PropertyTypeEnumFromJSON(json['property_type']),
        'relationType': json['relation_type'] == null ? undefined : IssuePropertyAPIRelationTypeFromJSON(json['relation_type']),
        'settings': json['settings'] == null ? undefined : json['settings'],
        'sortOrder': json['sort_order'] == null ? undefined : json['sort_order'],
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'updatedBy': json['updated_by'] == null ? undefined : json['updated_by'],
        'validationRules': json['validation_rules'] == null ? undefined : json['validation_rules'],
        'workspace': json['workspace'] == null ? undefined : json['workspace'],
    };
}

export function PatchedIssuePropertyAPIToJSON(json: any): PatchedIssuePropertyAPI {
    return PatchedIssuePropertyAPIToJSONTyped(json, false);
}

export function PatchedIssuePropertyAPIToJSONTyped(value?: Omit<PatchedIssuePropertyAPI, 'created_at'|'created_by'|'deleted_at'|'id'|'issue_type'|'logo_props'|'name'|'project'|'settings'|'sort_order'|'updated_at'|'updated_by'|'workspace'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'default_value': value['defaultValue'],
        'description': value['description'],
        'display_name': value['displayName'],
        'external_id': value['externalId'],
        'external_source': value['externalSource'],
        'is_active': value['isActive'],
        'is_multi': value['isMulti'],
        'is_required': value['isRequired'],
        'property_type': PropertyTypeEnumToJSON(value['propertyType']),
        'relation_type': IssuePropertyAPIRelationTypeToJSON(value['relationType']),
        'validation_rules': value['validationRules'],
    };
}

