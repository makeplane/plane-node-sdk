/* tslint:disable */
/* eslint-disable */
/**
 * Plane API
 * API documentation for my specific app
 *
 * The version of the OpenAPI document: 1.0.0 (1.0.0)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IssueExpand } from './IssueExpand';
import {
    IssueExpandFromJSON,
    IssueExpandFromJSONTyped,
    IssueExpandToJSON,
    IssueExpandToJSONTyped,
} from './IssueExpand';
import type { InboxIssueStatusEnum } from './InboxIssueStatusEnum';
import {
    InboxIssueStatusEnumFromJSON,
    InboxIssueStatusEnumFromJSONTyped,
    InboxIssueStatusEnumToJSON,
    InboxIssueStatusEnumToJSONTyped,
} from './InboxIssueStatusEnum';

/**
 * 
 * @export
 * @interface InboxIssue
 */
export interface InboxIssue {
    /**
     * 
     * @type {Date}
     * @memberof InboxIssue
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof InboxIssue
     */
    readonly createdBy: string | null;
    /**
     * 
     * @type {Date}
     * @memberof InboxIssue
     */
    deletedAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof InboxIssue
     */
    duplicateTo?: string | null;
    /**
     * 
     * @type {string}
     * @memberof InboxIssue
     */
    externalId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof InboxIssue
     */
    externalSource?: string | null;
    /**
     * 
     * @type {string}
     * @memberof InboxIssue
     */
    readonly id: string;
    /**
     * 
     * @type {string}
     * @memberof InboxIssue
     */
    inbox: string;
    /**
     * 
     * @type {string}
     * @memberof InboxIssue
     */
    readonly issue: string;
    /**
     * 
     * @type {IssueExpand}
     * @memberof InboxIssue
     */
    readonly issueDetail: IssueExpand;
    /**
     * 
     * @type {string}
     * @memberof InboxIssue
     */
    readonly project: string;
    /**
     * 
     * @type {Date}
     * @memberof InboxIssue
     */
    snoozedTill?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof InboxIssue
     */
    source?: string | null;
    /**
     * 
     * @type {InboxIssueStatusEnum}
     * @memberof InboxIssue
     */
    status?: InboxIssueStatusEnum;
    /**
     * 
     * @type {Date}
     * @memberof InboxIssue
     */
    readonly updatedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof InboxIssue
     */
    readonly updatedBy: string | null;
    /**
     * 
     * @type {string}
     * @memberof InboxIssue
     */
    readonly workspace: string;
}



/**
 * Check if a given object implements the InboxIssue interface.
 */
export function instanceOfInboxIssue(value: object): value is InboxIssue {
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('inbox' in value) || value['inbox'] === undefined) return false;
    if (!('issue' in value) || value['issue'] === undefined) return false;
    if (!('issueDetail' in value) || value['issueDetail'] === undefined) return false;
    if (!('project' in value) || value['project'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('updatedBy' in value) || value['updatedBy'] === undefined) return false;
    if (!('workspace' in value) || value['workspace'] === undefined) return false;
    return true;
}

export function InboxIssueFromJSON(json: any): InboxIssue {
    return InboxIssueFromJSONTyped(json, false);
}

export function InboxIssueFromJSONTyped(json: any, ignoreDiscriminator: boolean): InboxIssue {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': (new Date(json['created_at'])),
        'createdBy': json['created_by'],
        'deletedAt': json['deleted_at'] == null ? undefined : (new Date(json['deleted_at'])),
        'duplicateTo': json['duplicate_to'] == null ? undefined : json['duplicate_to'],
        'externalId': json['external_id'] == null ? undefined : json['external_id'],
        'externalSource': json['external_source'] == null ? undefined : json['external_source'],
        'id': json['id'],
        'inbox': json['inbox'],
        'issue': json['issue'],
        'issueDetail': IssueExpandFromJSON(json['issue_detail']),
        'project': json['project'],
        'snoozedTill': json['snoozed_till'] == null ? undefined : (new Date(json['snoozed_till'])),
        'source': json['source'] == null ? undefined : json['source'],
        'status': json['status'] == null ? undefined : InboxIssueStatusEnumFromJSON(json['status']),
        'updatedAt': (new Date(json['updated_at'])),
        'updatedBy': json['updated_by'],
        'workspace': json['workspace'],
    };
}

export function InboxIssueToJSON(json: any): InboxIssue {
    return InboxIssueToJSONTyped(json, false);
}

export function InboxIssueToJSONTyped(value?: Omit<InboxIssue, 'created_at'|'created_by'|'id'|'issue'|'issue_detail'|'project'|'updated_at'|'updated_by'|'workspace'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'deleted_at': value['deletedAt'] == null ? undefined : ((value['deletedAt'] as any).toISOString()),
        'duplicate_to': value['duplicateTo'],
        'external_id': value['externalId'],
        'external_source': value['externalSource'],
        'inbox': value['inbox'],
        'snoozed_till': value['snoozedTill'] == null ? undefined : ((value['snoozedTill'] as any).toISOString()),
        'source': value['source'],
        'status': InboxIssueStatusEnumToJSON(value['status']),
    };
}

